알고리즘의 복잡도는 두가지로 나타낼 수 있다.
1. 시간복잡도
2. 공간복잡도

시간복잡도 : 알고리즘이 수행하는 연산의 갯수
공간복잡도 : 알고리즘이 차지하는 공간을 말한다고 함

[시간복잡도]
1번 알고리즘 기본 연산수 : 20
2번 알고리즘 기본 연산수 : 100

단순히 비교했을 때 1번이 좋음. 5배정도?

근데 알고리즘은 입력 수 'n'에 따라서 연산의 수행횟수가 달라짐.

그래서 연산의 수를 입력의 갯수 n의 함수로 나타낸 것을 시간복잡도 함수라고 하고 이를 T(n)으로 표기한다.

[시간복잡도]
1번 알고리즘 기본 연산수 : 2n+3
2번 알고리즘 기본 연산수 : 2n^2 + 6


[Example]
Q) 양의 정수 n을 n번 더하는 문제
// 편의상 파이썬코드로 대체.
1번)
sum = 0
sum = n*n

2번)
sum = 0
for i in range(n):
    sum += n

3번)
sum = 0 
for i in range(n):
    for j in range(n):
        sum = sum + 1

1번은 2t, 2번은 2nt, 3번은 2(n^2)t의 시간이 걸림

모든 n > n0 에 대하여 |f(n)| <= c|g(n)|을 만족하는 2개의 상수 c와 n0가 존재하면 f(n) = O(g(n))이다.